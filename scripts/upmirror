#!/bin/bash
# A simple script for downloading a new mirror list for Archlinux and rank them by speed.

# Check that we have all dependencies.
# If we don't, try to install them.
function check_deps () {
    unset INSTALL
    if ! [[ -x $(command -v curl) ]]; then INSTALL="$INSTALL curl"; fi
    if ! [[ -x $(command -v rankmirrors) ]]; then INSTALL="$INSTALL pacman-contrib"; fi
}

# Add/remove countries according to your preferences.
# NL and DE are fairly close by and have a lot of good servers.
URL="https://www.archlinux.org/mirrorlist/?protocol=https&use_mirror_status=on" 
COUNTRIES="SE NO DK FI DE NL"
for COUNTRY in $COUNTRIES
do
    URL="$URL&country=$COUNTRY"
done

# Option to just print out the URL for looking at it manually.
if [[ $1 == "url" ]]; then
    echo This is the full URL I\'ll be using:
    echo $URL
    exit
fi

# If dependencies are not installed, try to install them.
check_deps
if ! [[ -z $INSTALL ]]; then
    if [[ $EUID -ne 0 ]]; then
        echo "Need to install dependencies and you're not root. Bye."
        exit
    fi

    pacman -S $INSTALL;
    echo
fi

# See that dependencies were installed and are executable.
check_deps
if ! [[ -z $INSTALL ]]; then
    echo "Dependencies are either not installed or not executable. Bye."
    exit
fi

# Check if root,
# check if /etc/pacman.d exists
# check if we need to backup the old mirrorlist.
if [[ $EUID -ne 0 ]]; then
    echo "Not root. Saving new mirrors to ~/mirrorlist."
    MIRROR_PATH="$HOME"

else
    if [[ -d /etc/pacman.d ]]; then
        echo "Running as root, your current mirror list will be replaced."
        MIRROR_PATH="/etc/pacman.d/"

        if [[ -e /etc/pacman.d/mirrorlist ]]; then
            echo "A backup will be created at /etc/pacman.d/mirrorlist_old."
            mv "$MIRROR_PATH/mirrorlist" "$MIRROR_PATH/mirrorlist_old"
        fi
    else
        echo "Directory /etc/pacman.d/ does not exist."
        echo "Saving new mirrors to ~/mirrors"
        MIRROR_PATH="$HOME"
    fi
fi

# Download new mirrors and test them for speed.
NEW_FILE=$(curl -s $URL |
    sed -e 's/^#Server/Server/' -e '/^#/d' |
    rankmirrors -n 30 -) 

if ! [[ -z $NEW_FILE ]]; then
    printf "$NEW_FILE" > $MIRROR_PATH/mirrorlist
else
    echo
    echo "Error! New mirror file was empty, not saving to file."
fi
