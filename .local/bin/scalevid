#!/bin/sh
# Set default values
height="-1"
width="-1"

prelude() {
  echo "scalevid"
  echo "A simple command for scaling videos using ffmpeg."
  echo
}

usage() {
  echo "scalevid [-h HEIGHT] [-w WIDTH] FILES"
  echo "The resolution should be a single number specifying the "
  exit
}

# Parse optargs
while getopts ":h::w:" o; do
  case "${o}" in
    h)  height=${OPTARG}
        ;;
    w)  width=${OPTARG}
        ;;
    *)  echo "Invalid option: ${OPTARG}"
        usage
        ;;
  esac
done

# Remove optargs from $@
shift $((OPTIND-1))

# Check that ffmpeg exists and is executable
if [ -z "$(command -v ffmpeg)" ] ; then
  echo "ffmpeg not installed or not executable."
  exit 1
fi

# Check that at least some files were specified
if [ -z "$@" ] ; then
  echo "No files specified, specify some files and try again."
  exit 1
fi

# Check that either one or both of height and width are set.
# If not, default to 720p
if [ "$width" -eq "-1" ] && [ "$height" -eq "-1" ] ; then
  height="720"
  echo "Neither height nor width specified, defaulting to 720p."
  echo "Press enter to continue."
  read
fi

# Check that neither height nor width are less than -1
if [ "$width" -lt "-1" ] || [ "$height" -lt "-1" ] ; then
  echo "Neither height nor width can be negative."
  exit 1
fi

# Check that neither height nor width are 0
if [ "$width" -eq "0" ] || [ "$height" -eq "0" ] ; then
  echo "Neither height nor width can be zero."
  exit 1
fi

# Check that all files exist
for file in "$@" ; do
  [ -r "$file" ] && continue
  echo "File ${file} does not exist or is not readable."
  echo "Verify your input and try again."
  exit 1
done;

# Convert the files
for file in "$@" ; do
  ffmpeg -y -i "$file" -vf scale="$width":"$height" "temp-${file}" ||
    continue
  mv "$file" "${file}-old"
  mv "temp-${file}" "$file"
done;
