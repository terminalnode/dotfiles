#!/usr/bin/ruby
# Quick and dirty URL handler.
#
# Inspired by gotbletu's urlportal.sh:
# https://github.com/gotbletu/shownotes/blob/master/urlportal.sh
#
# Enter preferences at the top of the script, check that the list
# of video sites etc match your use case, then call it with one
# URL at a time. Prefix URL with the word `play` if you'd rather
# play videos than download them.

# Settings
addToDownloadQueue = true
videoDownloadQueue = "~/.video-dl-queue"
svtDownloadQueue = "~/.svtplay-dl-queue"

# Application selection
browser = "$BROWSER"
videoPlayer = "mpv"
downloadVideo = "youtube-dl"
downloadSvt = "svtplay-dl"
downloadTorrent = "wget"

# Site types
videoSites = [
  "youtube.com/watch?v=",
  "dailymotion.com/video/",
  "vimeo.com/"
]

svtSites = [
  "svtplay.se/video/",
  "oppetarkiv.se/video/",
  "svt.se/"
]

torrentSites = [
  ".torrent"
]

@url = ARGV[-1]

# Case tester
def tester(list)
  list.each do |entry|
    return true if @url.include? entry
  end

  return false
end

# Download queue appender
def queueDownload(queue)
  `echo "#{@url}" >> #{queue}`
end

if (tester videoSites) then
  if ARGV.include? "play" then
    `#{videoPlayer} #{@url}`
  else
    if addToDownloadQueue && videoDownloadQueue
      then queueDownload videoDownloadQueue
      else `#{downloadVideo} #{@url}`
    end
  end

elsif (tester svtSites)
  if ARGV.include? "play" then
    `#{videoPlayer} #{@url}`
  else
    if addToDownloadQueue && svtDownloadQueue
      then queueDownload svtDownloadQueue
      else `#{downloadSvt} #{@url}`
    end
  end

elsif (tester torrentSites) then
  `#{downloadTorrent} #{@url}`

else
  `#{browser} #{@url}`
end
