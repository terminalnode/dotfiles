#!/bin/bash
# A simple script for downloading a new mirror list for Archlinux and rank them by speed.
# Option 'url': Just print the URL and exit.

# Get bold text if tput is available.
[[ -x $(command -v tput) ]] && BOLD=$(tput bold) && NORMAL=$(tput sgr0)

# URL SETUP
# Add/remove countries according to your preferences.
URL="https://www.archlinux.org/mirrorlist/?protocol=https&use_mirror_status=on" 
for COUNTRY in SE NO DK FI DE NL
    do
        URL="$URL&country=$COUNTRY";
    done

if [[ $1 == "url" || $1 == "--url" ]]; then
    echo -e "${BOLD}This is the full URL I'll be using:${NORMAL}\n$URL"
    exit
fi

### DEPENDENCY CHECK
function check_deps () {
    unset INSTALL
    if ! [[ -x $(command -v curl) ]]; then INSTALL="$INSTALL curl"; fi
    if ! [[ -x $(command -v rankmirrors) ]]; then INSTALL="$INSTALL pacman-contrib"; fi
}

# Install necessary dependencies.
check_deps
if ! [[ -z $INSTALL ]]; then
    if [[ $EUID -ne 0 ]]; then
        echo "${BOLD}Need to install dependencies and you're not root. Bye.${NORMAL}"
        exit
    fi
    pacman -S $INSTALL; echo
fi

# See that dependencies were installed and are executable.
check_deps
if ! [[ -z $INSTALL ]]; then
    echo "${BOLD}Dependencies are either not installed or not executable. Bye.${NORMAL}"
    exit
fi

### MIRROR_PATH CHECK
if [[ $EUID -ne 0 ]]; then
    echo "${BOLD}Not root. Saving new mirrors to ~/mirrorlist.${NORMAL}"
    MIRROR_PATH="$HOME"

else
    if [[ -d /etc/pacman.d ]]; then
        echo "${BOLD}Running as root. Saving new mirrors to /etc/pacman.d/mirrorlist.${NORMAL}"
        MIRROR_PATH="/etc/pacman.d/"

        if [[ -e /etc/pacman.d/mirrorlist ]]; then
            echo "A backup will be created at /etc/pacman.d/mirrorlist_old."
            cp "$MIRROR_PATH/mirrorlist" "$MIRROR_PATH/mirrorlist_old"
        fi
    else
        echo -e "${BOLD}Directory /etc/pacman.d/ does not exist.${NORMAL}\nSaving new mirrors to ~/mirrors"
        MIRROR_PATH="$HOME"
    fi
fi

### DOWNLOAD NEW MIRRORS
NEW_FILE=$(
    curl -s $URL |
    sed -e 's/^#Server/Server/' -e '/^#/d' |
    rankmirrors -n 30 -
) 

### COPY NEW MIRRORS TO PATH
if ! [[ -z $NEW_FILE ]]; then
    printf "$NEW_FILE" > $MIRROR_PATH/mirrorlist && echo "Done!"
else
    echo -e "${BOLD}\nError! New mirror file was empty, not saving to file.${NORMAL}"
fi
